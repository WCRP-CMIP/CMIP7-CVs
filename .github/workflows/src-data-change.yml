name: âˆ† src-data
description: Sync JSON and @context changes from src-data to production, applying relevant updates.

on:
  push:
    branches:
      - src-data
    paths:
      - '**/*.json'
      - '**/@context'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout production branch
        uses: actions/checkout@v4
        with:
          ref: production

      - name: Clean production except docs and summaries
        run: |
          shopt -s extglob
          rm -rf !(docs|summaries|.git)
          
      # - name: Checkout src-data branch
      #   uses: actions/checkout@v4
      #   with:
      #     ref: src-data
      #     path: ./


      - name: Restore path from remote action
        uses: WCRP-CMIP/CMIPLD/actions/fetch_branch_path@d3fa005788e5519d4a79219966c963213949f8b5
        with:
          branch: "production"
          path: .



      # - name: Copy JSON and @context files from src-data to production
      #   run: |
      #     rsync -av --include='*/' --include='*.json' --include='@context' --exclude='*' ../src-data/ ./
      #   working-directory: production

      # Add your processing/build steps here, if needed


      # - name: Generate summaries
      #   id: gen-summary
      #   run: |
      #     generate_summary .github/GENERATE_SUMMARY/


      - name: Commit All
        run: |
          git config user.name "cmipipo-actions[bot]"
          git config user.email "technical@wcrp-cmip.org"
          git add .
          git commit -m "Automated Content Update" || echo "No changes to commit"

      - name: Push PR
        uses: WCRP-CMIP/CMIPLD/actions/pushpr@main
        with:
            branch: "production"
            message: "Automated JSONLD update"
            token: ${{ secrets.GITHUB_TOKEN }}

  publish-pages:
    needs: sync
    uses: WCRP-CMIP/CMIPLD/.github/workflows/pages.yml@main
    with:
      branch: production
      force: true
    secrets:
      # supply token from the caller repo's secrets (can be GITHUB_TOKEN or a PAT stored as a secret)
      token: ${{ secrets.GITHUB_TOKEN }}
